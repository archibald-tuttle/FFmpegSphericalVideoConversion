
Taglio di un video senza riconversione:
ffmpeg -i inputfilename.mp4 -ss 00:00:10 -to 00:30:00 -c copy -c:a copy outputfilename.mp4

To specify time, you can use two different time unit formats: 
seconds (HOURS:MM:SS, e.g. 01:23:45)
sexagesimal (HOURS:MM:SS.MILLISECONDS, e.g. 01:23:45.678)

Cut using a duration
$ ffmpeg -i input.mp4 -ss 00:05:20 -t 00:10:00 -c:v copy -c:a copy output1.mp4
The above command will take the input video input.mp4, and cut out 10 minutes from it starting from 00:05:20-

Cut using a specific time
$ ffmpeg -i input.mp4 -ss 00:05:10 -to 00:15:30 -c:v copy -c:a copy output2.mp4
The above command uses -to to specify an exact time to cut to from the starting position. The cut video will be from 00:05:10 to 00:15:30, resulting in a 10 minutes and 20 seconds video.

Note that if you specify -ss before -i, -to will have the same effect as -t, i.e. it will act as a duration.
$ ffmpeg -ss 00:05:20 -i input.mp4 -t 00:10:00 -c:v copy -c:a copy output3.mp4
$ ffmpeg -ss 00:05:20 -i input.mp4 -to 00:10:00 -c:v copy -c:a copy output4.mp4
The above commands both result in videos that are 10 minutes long that are from 00:05:20 to 00:15:20 of the input video.


Concatenazione di due video:
ffmpeg -i input1.mp4 -i input2.mp4 -filter_complex "[0:v][0:a][1:v][1:a]concat=n=2:v=1:a=1[outv][outa]" -map "[outv]" -map "[outa]" output.mp4
Questo comando concatena due video senza riconversione.

Cambio di formato video:
ffmpeg -i input.mp4 -c:v h264 -c:a aac -strict experimental output.mp4
Questo comando converte il formato del video in H.264 e l'audio in AAC.

Ridimensionamento del video:
ffmpeg -i input.mp4 -vf scale=640:480 -c:a copy output.mp4
Questo comando ridimensiona il video a 640x480 pixel senza riconversione dell'audio.

Estrazione di un'immagine di anteprima:
ffmpeg -i input.mp4 -ss 00:00:05 -vframes 1 thumbnail.jpg
Questo comando estrae un'immagine di anteprima dal video a 5 secondi.

Aggiunta di un sottotitolo:
ffmpeg -i input.mp4 -vf "subtitles=subtitles.srt" output.mp4
Questo comando aggiunge sottotitoli al video utilizzando un file di sottotitoli (.srt).

Modifica della velocità del video:
ffmpeg -i input.mp4 -filter:v "setpts=0.5*PTS" output.mp4
Questo comando raddoppia la velocità del video.

Rimuovere l'audio da un video:
ffmpeg -i input.mp4 -c:v copy -an output.mp4
Questo comando rimuove l'audio dal video.

Cambiare il volume audio:
ffmpeg -i input.mp4 -c:v copy -af "volume=1.5" output.mp4
Questo comando aumenta il volume audio del 50%.

Ruotare il video di 90 gradi in senso orario:
ffmpeg -i input.mp4 -vf "transpose=1" -c:a copy output.mp4


ffmpeg -i input_video.mp4 -vf "crop=iw/2:ih/2:0:0" -c:a copy top_left.mp4
ffmpeg -i input_video.mp4 -vf "crop=iw/2:ih/2:iw/2:0" -c:a copy top_right.mp4
ffmpeg -i input_video.mp4 -vf "crop=iw/2:ih/2:0:ih/2" -c:a copy bottom_left.mp4
ffmpeg -i input_video.mp4 -vf "crop=iw/2:ih/2:iw/2:ih/2" -c:a copy bottom_right.mp4

-vf "crop=iw/2:ih/2": Il filtro crop riduce sia la larghezza che l'altezza del video a metà.
0:0, iw/2:0, 0:ih/2, iw/2:ih/2: Queste coordinate indicano da quale parte del video originale iniziare il ritaglio (alto sinistra, alto destra, basso sinistra, basso destra).



WEBM
1pass
ffmpeg -i input.mp4 -c:v libvpx-vp9 -crf 30 -b:v 0 output.webm
ffmpeg -i input.mp4 -c:v libvpx-vp9 -crf 30 -b:v 2000k output.webm
ffmpeg -i input.mp4 -c:v libvpx-vp9 -minrate 500k -b:v 2000k -maxrate 2500k output.webm

2pass
ffmpeg -i input.mp4 -c:v libvpx-vp9 -b:v 2M -pass 1 -an -f null /dev/null &&
ffmpeg -i input.mp4 -c:v libvpx-vp9 -b:v 2M -pass 2 -c:a libopus output.webm

ffmpeg -i input.mp4 -c:v libvpx-vp9 -b:v 0 -crf 30 -pass 1 -an -f null /dev/null &&
ffmpeg -i input.mp4 -c:v libvpx-vp9 -b:v 0 -crf 30 -pass 2 -c:a libopus output.webm

VR Headset
ffmpeg -i "monoscopic_video.mp4" -c:v libx264 -crf 18 -x264-params "mvrange=511" -maxrate 120M -bufsize 150M -vf "scale=5760x2880" -pix_fmt yuv420p -c:a aac -b:a 192k -r 30 -movflags faststart "monoscopic_output.mp4"
ffmpeg -i "stereoscopic_video.mp4" -c:v libx265 -crf 17 -maxrate 120M -bufsize 150M -vf "scale=4096x4096" -pix_fmt yuv420p -c:a aac -b:a 192k -r 30 -movflags faststart "stereoscopic_output.mp4"

Mobile Device
This is a 4096\'d72048 mono or a 3840\'d72160 stereo 30FPS H.265 encode. \
ffmpeg -i "monoscopic_video.mp4" -c:v libx265 -crf 17 -maxrate 80M -bufsize 100M -vf "scale=4096x2048" -pix_fmt yuv420p -c:a aac -b:a 192k -r 30 -movflags faststart "monoscopic_output.mp4"

Stream
The HLS video-on-demand stream uses the mobile-compatible 4096\'d72048 mono or 3840\'d72160 stereo 30FPS H.265 encode as its highest quality for streaming, dropping down to 1440p, 1080p or 720p if network conditions are poor.
ffmpeg -i "stereoscopic_video.mp4" -c:v libx265 -crf 20 -x265-params "keyint=60:min-keyint=60" -maxrate 25M -bufsize 35M -vf "scale=3840x2160" -pix_fmt yuv420p -c:a aac -b:a 192k -r 30 -g 60 "stereoscopic_output.mp4"\

WebVR (BETA)\
There is a 1080p version available optimized for distribution on websites with just a couple of lines of HTML. This 1080p version is also used as a fallback video format on devices that are unable to run any of the other formats for some reason.\
ffmpeg -i "monoscopic_video.mp4" -c:v libx264 -crf 21 -maxrate 10M -bufsize 15M -vf "scale=1920x1080" -pix_fmt yuv420p -c:a aac -b:a 192k -r 30 -g 60 -keyint_min 60 "monoscopic_output.mp4"}


360 ENCODING GOOD
  Metadata:\
    ENCODER         : Lavf58.42.100\
  Duration: N/A, start: -0.007000, bitrate: N/A\
    Stream #0:0(eng): Video: vp9 (Profile 0), yuv420p (tv, bt709), 7680x3840, SAR 1:1 DAR 2:1, 29.97 fps, 29.97 tbr, 1k tbn, 1k tbc (default)\
    Side data:\
      stereo3d: 2D\
    Stream #0:1(eng): Audio: opus, 48000 Hz, stereo, fltp (default)\